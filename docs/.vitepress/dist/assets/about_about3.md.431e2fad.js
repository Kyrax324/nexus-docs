import{_ as e,c as a,o as l,a as i}from"./app.b386aba9.js";const v=JSON.parse('{"title":"Web team standardization & practice checklist","description":"","frontmatter":{},"headers":[{"level":2,"title":"Database","slug":"database","link":"#database","children":[]},{"level":2,"title":"Laravel - Backend","slug":"laravel-backend","link":"#laravel-backend","children":[]},{"level":2,"title":"composer","slug":"composer","link":"#composer","children":[{"level":3,"title":"naming","slug":"naming","link":"#naming","children":[]},{"level":3,"title":"all request shall use FormRequest","slug":"all-request-shall-use-formrequest","link":"#all-request-shall-use-formrequest","children":[]},{"level":3,"title":"LOG_CHANNEL use \\"daily\\" instead \\"stack\\"","slug":"log-channel-use-daily-instead-stack","link":"#log-channel-use-daily-instead-stack","children":[]},{"level":3,"title":"route","slug":"route","link":"#route","children":[]},{"level":3,"title":"app config","slug":"app-config","link":"#app-config","children":[]},{"level":3,"title":"filesystem","slug":"filesystem","link":"#filesystem","children":[]},{"level":3,"title":"keep .env,example up to date","slug":"keep-env-example-up-to-date","link":"#keep-env-example-up-to-date","children":[]},{"level":3,"title":"keep migration alive","slug":"keep-migration-alive","link":"#keep-migration-alive","children":[]},{"level":3,"title":"use env() only in config files","slug":"use-env-only-in-config-files","link":"#use-env-only-in-config-files","children":[]},{"level":3,"title":"aware with lazy-loading","slug":"aware-with-lazy-loading","link":"#aware-with-lazy-loading","children":[]},{"level":3,"title":"Model","slug":"model","link":"#model","children":[]},{"level":3,"title":"Controller","slug":"controller","link":"#controller","children":[]},{"level":3,"title":"api response","slug":"api-response","link":"#api-response","children":[]},{"level":3,"title":"JsonResource","slug":"jsonresource","link":"#jsonresource","children":[]},{"level":3,"title":"overwatch panel","slug":"overwatch-panel","link":"#overwatch-panel","children":[]},{"level":3,"title":"seeders","slug":"seeders","link":"#seeders","children":[]},{"level":3,"title":"error handling","slug":"error-handling","link":"#error-handling","children":[]},{"level":3,"title":"json response","slug":"json-response","link":"#json-response","children":[]},{"level":3,"title":"unit test (planning)","slug":"unit-test-planning","link":"#unit-test-planning","children":[]}]},{"level":2,"title":"SPA (Vue)","slug":"spa-vue","link":"#spa-vue","children":[]},{"level":2,"title":"Server","slug":"server","link":"#server","children":[]},{"level":2,"title":"Tools","slug":"tools","link":"#tools","children":[{"level":3,"title":"VSCode","slug":"vscode","link":"#vscode","children":[]}]}],"relativePath":"about/about3.md"}'),n={name:"about/about3.md"},s=i(`<h1 id="web-team-standardization-practice-checklist" tabindex="-1">Web team standardization &amp; practice checklist <a class="header-anchor" href="#web-team-standardization-practice-checklist" aria-hidden="true">#</a></h1><h2 id="database" tabindex="-1">Database <a class="header-anchor" href="#database" aria-hidden="true">#</a></h2><ul><li>use plural naming eg: &quot;users&quot;</li><li>for pivot table, use &quot;mappings&quot; eg: &quot;user_product_mappings&quot;</li><li>use primary key &amp; foreign key (indexing)</li><li>DB::transaction</li></ul><h2 id="laravel-backend" tabindex="-1">Laravel - Backend <a class="header-anchor" href="#laravel-backend" aria-hidden="true">#</a></h2><h2 id="composer" tabindex="-1">composer <a class="header-anchor" href="#composer" aria-hidden="true">#</a></h2><ul><li>avoid update in server (will ahead from HEAD)</li></ul><h3 id="naming" tabindex="-1">naming <a class="header-anchor" href="#naming" aria-hidden="true">#</a></h3><h3 id="all-request-shall-use-formrequest" tabindex="-1">all request shall use <code>FormRequest</code> <a class="header-anchor" href="#all-request-shall-use-formrequest" aria-hidden="true">#</a></h3><ul><li><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">payload </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">request</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">validated</span><span style="color:#89DDFF;">();</span></span>
<span class="line"></span></code></pre></div></li><li>clearer picture of which payload is passed into controller</li></ul><h3 id="log-channel-use-daily-instead-stack" tabindex="-1">LOG_CHANNEL use &quot;daily&quot; instead &quot;stack&quot; <a class="header-anchor" href="#log-channel-use-daily-instead-stack" aria-hidden="true">#</a></h3><h3 id="route" tabindex="-1">route <a class="header-anchor" href="#route" aria-hidden="true">#</a></h3><ul><li>subdomain</li></ul><h3 id="app-config" tabindex="-1">app config <a class="header-anchor" href="#app-config" aria-hidden="true">#</a></h3><ul><li>timezone</li><li>subdomain</li></ul><h3 id="filesystem" tabindex="-1">filesystem <a class="header-anchor" href="#filesystem" aria-hidden="true">#</a></h3><ul><li><p>default <code>FILESYSTEM_DRIVER=&quot;uploads&quot;</code></p></li><li><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">php</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">artisan</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">storage:link</span></span>
<span class="line"></span></code></pre></div></li><li><p>server-file</p></li><li><p>asset-file</p></li><li><p>image-upload handler</p></li></ul><h3 id="keep-env-example-up-to-date" tabindex="-1">keep <code>.env,example</code> up to date <a class="header-anchor" href="#keep-env-example-up-to-date" aria-hidden="true">#</a></h3><h3 id="keep-migration-alive" tabindex="-1">keep migration alive <a class="header-anchor" href="#keep-migration-alive" aria-hidden="true">#</a></h3><h3 id="use-env-only-in-config-files" tabindex="-1">use <code>env()</code> only in config files <a class="header-anchor" href="#use-env-only-in-config-files" aria-hidden="true">#</a></h3><h3 id="aware-with-lazy-loading" tabindex="-1">aware with lazy-loading <a class="header-anchor" href="#aware-with-lazy-loading" aria-hidden="true">#</a></h3><h3 id="model" tabindex="-1"><code>Model</code> <a class="header-anchor" href="#model" aria-hidden="true">#</a></h3><ul><li>stub | categorize methods</li><li>avoid using whereX magic method eg: where</li><li>avoid using scope</li><li>aware on appends, getXAttribute()</li><li>avoid using with = []</li><li>relationship method naming singular/plural</li><li>trait <ul><li>firstOrThrow()</li></ul></li></ul><h3 id="controller" tabindex="-1"><code>Controller</code> <a class="header-anchor" href="#controller" aria-hidden="true">#</a></h3><ul><li>method that relevant in route</li></ul><h3 id="api-response" tabindex="-1">api response <a class="header-anchor" href="#api-response" aria-hidden="true">#</a></h3><h3 id="jsonresource" tabindex="-1"><code>JsonResource</code> <a class="header-anchor" href="#jsonresource" aria-hidden="true">#</a></h3><h3 id="overwatch-panel" tabindex="-1">overwatch panel <a class="header-anchor" href="#overwatch-panel" aria-hidden="true">#</a></h3><ul><li>Telescope</li><li>Hubblescope</li><li>Swagger (in progress)</li></ul><h3 id="seeders" tabindex="-1">seeders <a class="header-anchor" href="#seeders" aria-hidden="true">#</a></h3><h3 id="error-handling" tabindex="-1">error handling <a class="header-anchor" href="#error-handling" aria-hidden="true">#</a></h3><ul><li>badRequestException</li></ul><h3 id="json-response" tabindex="-1">json response <a class="header-anchor" href="#json-response" aria-hidden="true">#</a></h3><h3 id="unit-test-planning" tabindex="-1">unit test (planning) <a class="header-anchor" href="#unit-test-planning" aria-hidden="true">#</a></h3><hr><h2 id="spa-vue" tabindex="-1">SPA (Vue) <a class="header-anchor" href="#spa-vue" aria-hidden="true">#</a></h2><ul><li><p>gitignore</p></li><li><p>spa blade</p></li><li><p>Vue as application</p><ul><li>eslint</li><li>file structure &amp; modules</li></ul></li></ul><hr><h2 id="server" tabindex="-1">Server <a class="header-anchor" href="#server" aria-hidden="true">#</a></h2><ul><li>subdomain</li><li>email account</li><li>source code directory &amp; upload</li><li>cronjob</li><li>supervisor</li></ul><hr><h2 id="tools" tabindex="-1">Tools <a class="header-anchor" href="#tools" aria-hidden="true">#</a></h2><h3 id="vscode" tabindex="-1">VSCode <a class="header-anchor" href="#vscode" aria-hidden="true">#</a></h3><ul><li>extension</li><li>shortcut keys</li></ul>`,43),r=[s];function t(o,d,h,c,u,p){return l(),a("div",null,r)}const m=e(n,[["render",t]]);export{v as __pageData,m as default};
